//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.431
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.localhost {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="localhost.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ReceiveData", ReplyAction="http://tempuri.org/IService/ReceiveDataResponse")]
        void ReceiveData(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/ReceiveData", ReplyAction="http://tempuri.org/IService/ReceiveDataResponse")]
        System.IAsyncResult BeginReceiveData(byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndReceiveData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Client.localhost.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Client.localhost.IService>, Client.localhost.IService {
        
        private BeginOperationDelegate onBeginReceiveDataDelegate;
        
        private EndOperationDelegate onEndReceiveDataDelegate;
        
        private System.Threading.SendOrPostCallback onReceiveDataCompletedDelegate;
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReceiveDataCompleted;
        
        public void ReceiveData(byte[] data) {
            base.Channel.ReceiveData(data);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReceiveData(byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReceiveData(data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndReceiveData(System.IAsyncResult result) {
            base.Channel.EndReceiveData(result);
        }
        
        private System.IAsyncResult OnBeginReceiveData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] data = ((byte[])(inValues[0]));
            return this.BeginReceiveData(data, callback, asyncState);
        }
        
        private object[] OnEndReceiveData(System.IAsyncResult result) {
            this.EndReceiveData(result);
            return null;
        }
        
        private void OnReceiveDataCompleted(object state) {
            if ((this.ReceiveDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReceiveDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReceiveDataAsync(byte[] data) {
            this.ReceiveDataAsync(data, null);
        }
        
        public void ReceiveDataAsync(byte[] data, object userState) {
            if ((this.onBeginReceiveDataDelegate == null)) {
                this.onBeginReceiveDataDelegate = new BeginOperationDelegate(this.OnBeginReceiveData);
            }
            if ((this.onEndReceiveDataDelegate == null)) {
                this.onEndReceiveDataDelegate = new EndOperationDelegate(this.OnEndReceiveData);
            }
            if ((this.onReceiveDataCompletedDelegate == null)) {
                this.onReceiveDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReceiveDataCompleted);
            }
            base.InvokeAsync(this.onBeginReceiveDataDelegate, new object[] {
                        data}, this.onEndReceiveDataDelegate, this.onReceiveDataCompletedDelegate, userState);
        }
    }
}
